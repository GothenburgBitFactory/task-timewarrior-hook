name: tests
on: [push, pull_request]
jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Test
        run: |
          export PYTHONPATH=.
          python3 -m venv venv
          venv/bin/pip install --upgrade pip
          venv/bin/pip install pytest mockito
          venv/bin/pytest test/test_on-modify_unit.py

  e2e-tests:
    needs: unit-tests
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "task [stable] & timew [stable]"
            runner: ubuntu-latest
            container: task-stable-timew-stable
          - name: "task [develop] & timew [stable]"
            runner: ubuntu-latest
            container: task-develop-timew-stable
          - name: "task [stable] & timew [develop]"
            runner: ubuntu-latest
            container: task-stable-timew-develop
          - name: "task [develop] & timew [develop]"
            runner: ubuntu-latest
            container: task-develop-timew-develop

    runs-on: ${{ matrix.runner }}
    continue-on-error: ${{ matrix.continue-on-error == true }}
    steps:
      - name: Create lowercase repository name
        run: |
          GHCR_REPOSITORY="${{ github.repository_owner }}"
          echo "REPOSITORY=${GHCR_REPOSITORY,,}" >> ${GITHUB_ENV}
      - uses: actions/checkout@v4
      - name : Login to GHCR
        uses : docker/login-action@v3.4.0
        with :
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build e2e on ${{ matrix.name }}
        env:
          REGISTRY: ghcr.io
          OWNER: ${{ env.REPOSITORY }}
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONTAINER: ${{ matrix.container }}
        run: docker compose build ${CONTAINER}
      - name: Run e2e on ${{ matrix.name }}
        env:
          REGISTRY: ghcr.io
          OWNER: ${{ env.REPOSITORY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CONTAINER: ${{ matrix.container }}
        run: docker compose run ${CONTAINER}
